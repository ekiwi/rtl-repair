; SMT-LIBv2 description generated by Yosys 0.12+42 (git sha1 7407a7f3e, clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module first_counter
(declare-sort |first_counter_s| 0)
(declare-fun |first_counter_is| (|first_counter_s|) Bool)
(declare-fun |first_counter#0| (|first_counter_s|) (_ BitVec 1)) ; \overflow_out
; yosys-smt2-output overflow_out 1
; yosys-smt2-register overflow_out 1
(define-fun |first_counter_n overflow_out| ((state |first_counter_s|)) Bool (= ((_ extract 0 0) (|first_counter#0| state)) #b1))
(declare-fun |first_counter#1| (|first_counter_s|) (_ BitVec 4)) ; \counter_out
; yosys-smt2-output counter_out 4
; yosys-smt2-register counter_out 4
(define-fun |first_counter_n counter_out| ((state |first_counter_s|)) (_ BitVec 4) (|first_counter#1| state))
(declare-fun |first_counter#2| (|first_counter_s|) Bool) ; \enable
; yosys-smt2-input enable 1
(define-fun |first_counter_n enable| ((state |first_counter_s|)) Bool (|first_counter#2| state))
(declare-fun |first_counter#3| (|first_counter_s|) Bool) ; \reset
; yosys-smt2-input reset 1
(define-fun |first_counter_n reset| ((state |first_counter_s|)) Bool (|first_counter#3| state))
(declare-fun |first_counter#4| (|first_counter_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
(define-fun |first_counter_n clk| ((state |first_counter_s|)) Bool (|first_counter#4| state))
(define-fun |first_counter#5| ((state |first_counter_s|)) (_ BitVec 32) (bvadd (concat #b0000000000000000000000000000 (|first_counter#1| state)) #b00000000000000000000000000000001)) ; $add$first_counter_overflow.v:44$4_Y
(define-fun |first_counter#6| ((state |first_counter_s|)) Bool (= (ite (|first_counter#2| state) #b1 #b0) #b1)) ; $eq$first_counter_overflow.v:43$3_Y
(define-fun |first_counter#7| ((state |first_counter_s|)) (_ BitVec 4) (ite (|first_counter#6| state) ((_ extract 3 0) (|first_counter#5| state)) (|first_counter#1| state))) ; $procmux$11_Y
(define-fun |first_counter#8| ((state |first_counter_s|)) Bool (= (ite (|first_counter#3| state) #b1 #b0) #b1)) ; $eq$first_counter_overflow.v:38$2_Y
(define-fun |first_counter#9| ((state |first_counter_s|)) (_ BitVec 4) (ite (|first_counter#8| state) #b0000 (|first_counter#7| state))) ; $procmux$14_Y
(define-fun |first_counter#10| ((state |first_counter_s|)) (_ BitVec 1) (ite (|first_counter#8| state) #b0 (|first_counter#0| state))) ; $procmux$7_Y
(define-fun |first_counter#11| ((state |first_counter_s|)) Bool (= (|first_counter#1| state) #b1111)) ; $eq$first_counter_overflow.v:48$5_Y
(define-fun |first_counter#12| ((state |first_counter_s|)) (_ BitVec 1) (ite (|first_counter#11| state) #b1 (|first_counter#10| state))) ; $procmux$9_Y
(define-fun |first_counter_a| ((state |first_counter_s|)) Bool true)
(define-fun |first_counter_u| ((state |first_counter_s|)) Bool true)
(define-fun |first_counter_i| ((state |first_counter_s|)) Bool true)
(define-fun |first_counter_h| ((state |first_counter_s|)) Bool true)
(define-fun |first_counter_t| ((state |first_counter_s|) (next_state |first_counter_s|)) Bool (and
  (= (|first_counter#9| state) (|first_counter#1| next_state)) ; $procdff$16 \counter_out
  (= (|first_counter#12| state) (|first_counter#0| next_state)) ; $procdff$17 \overflow_out
)) ; end of module first_counter
; yosys-smt2-topmod first_counter
; end of yosys output
