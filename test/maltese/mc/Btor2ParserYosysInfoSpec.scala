package maltese.mc

import org.scalatest.flatspec.AnyFlatSpec

class Btor2ParserYosysInfoSpec extends AnyFlatSpec {
  behavior of "Btor2Parser"

  it should "correctly parse meta data generated by yosys for a small FSM" in {
    val dir = os.pwd / "test" / "maltese" / "mc"

    // by default there are only very few annotations emitted by yosys
    val sys = Btor2.load(dir / "fsm_full.btor")
    assert(sys.comments.size == 11)
    assert(sys.header.contains("Yosys"))

    // with the `-x` option to `write_btor` command we get many more annotations
    val sysWithInfo = Btor2.load(dir / "fsm_full_with_info.btor")
    assert(sysWithInfo.comments.size == 83)
    assert(sysWithInfo.header.contains("Yosys"))
  }

  // val dir = os.pwd / "benchmarks" / "cirfix" / "first_counter_overflow"
  // val dir = os.pwd / "benchmarks" / "cirfix" / "decoder_3_to_8"

}
